// <auto-generated />
using CalculatorWebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CalculatorWebApi.Migrations
{
    [DbContext(typeof(CalculateContext))]
    partial class CalculateContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CalculatorWebApi.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("Operator");

                    b.Property<double>("Result");

                    b.Property<int>("UserId");

                    b.Property<double>("Value1");

                    b.Property<double>("Value2");

                    b.HasKey("Id");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("CalculatorWebApi.Models.MathOperators", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Operator")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.HasKey("Id");

                    b.ToTable("MathOperators");

                    b.HasData(
                        new { Id = 1, Operator = "+" },
                        new { Id = 2, Operator = "-" },
                        new { Id = 3, Operator = "*" },
                        new { Id = 4, Operator = "/" }
                    );
                });

            modelBuilder.Entity("CalculatorWebApi.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Users");

                    b.HasData(
                        new { id = 1, firstName = "Shalom", lastName = "Israel", password = "nimda", username = "admin" }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
